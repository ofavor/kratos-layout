syntax = "proto3";

package helloworld.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/ofavor/kratos-layout/api/gen/helloworld/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.helloworld.v1";
option java_outer_classname = "HelloworldProtoV1";

// 设置OpenAPI安全定义
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
            // 定义 "api_key" 类型的安全机制
            key: "api_key"
            value: {
                type: TYPE_API_KEY // see enum
                name: "Authorization"
                in: IN_HEADER // see enum
            }
        }
    };
};

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      get: "/v1/helloworld/greeter/{id}"
    };
  }

  rpc Create(CreateRequest) returns (CreateResponse) {
    option (google.api.http) = {
      post: "/v1/helloworld/greeter"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a test greeter";
      security: {
        security_requirement: {
          key: "api_key"
          value: {}
        }
      }
    };
  }
}

// The request message containing the user's name.
message HelloRequest {
  string id = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message CreateRequest {
  string name = 1;
  string greeting = 2;
}

message CreateResponse {
  int64 id = 1;
}
